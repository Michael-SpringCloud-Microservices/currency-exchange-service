buildscript {
	ext {
		//springBootVersion = '2.0.7.RELEASE'
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.in28minutes.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

//ext['springCloudVersion'] = 'Finchley.SR2'
ext['springCloudVersion'] = 'Greenwich.RELEASE'



dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	// The following implementation is for enabling this service to be a config client
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('com.h2database:h2')
	
	// The following dependency is for generating a unique id for each request
	// to trace it among multiple micro services's log
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	
	// For logging log messages with the specific format which could be understood by zipkin
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
	
	// For connecting micro services to Rabbit MQ message broker and publish logs messages to default Exchange
	// Which will be delivered to Queue Zipkin
	// This is an implementation of Spring Clould Bus
	implementation 'org.springframework.amqp:spring-rabbit'
		
	// For integrating zipkin message format - Spring Boot version which is lesser than 2.0.0 
	//implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'	
	//Spring Boot version which is lesser than 2.0.0 -> For connecting Micro services to Rabbit MQ message broker 
	//And publish logs as message to Exchange
	//implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	
	
	
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
